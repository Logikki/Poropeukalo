{"ast":null,"code":"var _jsxFileName = \"/Users/ronikoskinen/environments/poropeukalo/front/src/components/CalendarMy.js\";\nimport Calendar from 'react-calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarMy = _ref => {\n  let {\n    date,\n    setDate\n  } = _ref;\n  // const disabledDates = [\n  //   new Date(2022, 7, 25),\n  //   new Date(2022, 7, 26),\n  // ] toimi t채ll채 \n  console.log(date);\n  console.log(disabledDates[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: setDate,\n        value: date,\n        selectRange: true,\n        tileDisabled: _ref2 => {\n          let {\n            date,\n            view\n          } = _ref2;\n          return view === 'month' && // Block day tiles only\n          disabledDates.some(disabledDate => date.getFullYear() === disabledDate.getFullYear() && date.getMonth() === disabledDate.getMonth() && date.getDate() === disabledDate.getDate());\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), date.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Start:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), date[0].toDateString(), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"End:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), date[1].toDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Default selected date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), date.toDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CalendarMy;\nexport default CalendarMy;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarMy\");","map":{"version":3,"names":["Calendar","CalendarMy","date","setDate","console","log","disabledDates","view","some","disabledDate","getFullYear","getMonth","getDate","length","toDateString"],"sources":["/Users/ronikoskinen/environments/poropeukalo/front/src/components/CalendarMy.js"],"sourcesContent":["import Calendar from 'react-calendar'\n\nconst CalendarMy = ({ date, setDate }) => {\n  // const disabledDates = [\n  //   new Date(2022, 7, 25),\n  //   new Date(2022, 7, 26),\n  // ] toimi t채ll채 \n\n  console.log(date)\n  console.log(disabledDates[0])\n  return (\n    <div>\n      <div className=\"calendar_wrapper\">\n        <Calendar\n          onChange={setDate}\n          value={date}\n          selectRange={true}\n          tileDisabled={({ date, view }) =>\n            (view === 'month') && // Block day tiles only\n                    disabledDates.some(disabledDate =>\n                      date.getFullYear() === disabledDate.getFullYear() &&\n                      date.getMonth() === disabledDate.getMonth() &&\n                      date.getDate() === disabledDate.getDate()\n                    )}\n        />\n      </div>\n\n      {date.length > 0 ? (\n        <p>\n          <span>Start:</span>\n          {date[0].toDateString()}\n     &nbsp;\n     &nbsp;\n          <span>End:</span>{date[1].toDateString()}\n        </p>\n      ) : (\n        <p>\n          <span>Default selected date:</span>{date.toDateString()}\n        </p>\n      )\n      }\n\n    </div>\n  )\n}\n\nexport default CalendarMy"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,gBAArB;;;AAEA,MAAMC,UAAU,GAAG,QAAuB;EAAA,IAAtB;IAAEC,IAAF;IAAQC;EAAR,CAAsB;EACxC;EACA;EACA;EACA;EAEAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACAE,OAAO,CAACC,GAAR,CAAYC,aAAa,CAAC,CAAD,CAAzB;EACA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,kBAAf;MAAA,uBACE,QAAC,QAAD;QACE,QAAQ,EAAEH,OADZ;QAEE,KAAK,EAAED,IAFT;QAGE,WAAW,EAAE,IAHf;QAIE,YAAY,EAAE;UAAA,IAAC;YAAEA,IAAF;YAAQK;UAAR,CAAD;UAAA,OACXA,IAAI,KAAK,OAAV,IAAsB;UACdD,aAAa,CAACE,IAAd,CAAmBC,YAAY,IAC7BP,IAAI,CAACQ,WAAL,OAAuBD,YAAY,CAACC,WAAb,EAAvB,IACAR,IAAI,CAACS,QAAL,OAAoBF,YAAY,CAACE,QAAb,EADpB,IAEAT,IAAI,CAACU,OAAL,OAAmBH,YAAY,CAACG,OAAb,EAHrB,CAFI;QAAA;MAJhB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,EAgBGV,IAAI,CAACW,MAAL,GAAc,CAAd,gBACC;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEGX,IAAI,CAAC,CAAD,CAAJ,CAAQY,YAAR,EAFH,4BAKE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,EAKoBZ,IAAI,CAAC,CAAD,CAAJ,CAAQY,YAAR,EALpB;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,gBASC;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EACsCZ,IAAI,CAACY,YAAL,EADtC;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD,CA1CD;;KAAMb,U;AA4CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}